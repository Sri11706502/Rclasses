ylab="Marks",
col="yellow",
border="blue",
main="Student v/s Marks")
graphplot <- function(x,y){
barplot(y,
names.arg = x,
xlab="Students",
ylab="Marks",
col="yellow",
border="blue",
main="Student v/s Marks")
}
yval <- c(10,20,30,40,50,60,70,80,90,100)
xval <- c("s1","s2","s3","s4","s5","s6","s7","s8","s9","s10")
graphplot(xval,yval)
graphplot <- function(x,y){
barplot(y,
names.arg = x,
xlab="Students",
ylab="Marks",
col="yellow",
border="blue",
main="Student v/s Marks",
horiz=TRUE)
}
yval <- c(10,20,30,40,50,60,70,80,90,100)
xval <- c("s1","s2","s3","s4","s5","s6","s7","s8","s9","s10")
graphplot(xval,yval)
graphplot <- function(x,y){
barplot(y,
names.arg = x,
xlab="Students",
ylab="Marks",
col="lightblue",
border="blue",
main="Student v/s Marks",
horiz=TRUE)
}
yval <- c(10,20,30,40,50,60,70,80,90,100)
xval <- c("s1","s2","s3","s4","s5","s6","s7","s8","s9","s10")
graphplot(xval,yval)
graphplot <- function(x,y){
barplot(y,
names.arg = x,
xlab="Students",
ylab="Marks",
col="mistyrose",
border="blue",
main="Student v/s Marks",
horiz=TRUE)
}
yval <- c(10,20,30,40,50,60,70,80,90,100)
xval <- c("s1","s2","s3","s4","s5","s6","s7","s8","s9","s10")
graphplot(xval,yval)
graphplot <- function(x,y){
barplot(y,
names.arg = x,
xlab="Students",
ylab="Marks",
col="lavender",
border="blue",
main="Student v/s Marks",
horiz=TRUE)
}
yval <- c(10,20,30,40,50,60,70,80,90,100)
xval <- c("s1","s2","s3","s4","s5","s6","s7","s8","s9","s10")
graphplot(xval,yval)
exam_data=data.frame(
name <- c("a","b","c"),
score <- c(12.5,9,16.5),
attempts <- c(1,3,2),
qualify <- c("yes,"no","yes"")
)
print("original dataframe")
print(exam_data)
print("Extracting specific columns")
result <- data.frame(exam_data$name,exam_data$score)
exam_data <- data.frame(
name <- c("a","b","c"),
score <- c(12.5,9,16.5),
attempts <- c(1,3,2),
qualify <- c("yes,"no","yes"")
)
exam_data <- data.frame(
name <- c("a","b","c"),
score <- c(12.5,9,16.5),
attempts <- c(1,3,2),
qualify <- c("yes,"no","yes"")
)
print("original dataframe")
print(exam_data)
print("Extracting specific columns")
result <- data.frame(exam_data$name,exam_data$score)
exam_data <- data.frame(
name <- c("a","b","c"),
score <- c(12.5,9,16.5),
attempts <- c(1,3,2),
qualify <- c("yes","no","yes")
)
print("original dataframe")
print(exam_data)
print("Extracting specific columns")
result <- data.frame(exam_data$name,exam_data$score)
exam_data
exam_data <- data.frame(
name <- c("a","b","c"),
score <- c(12.5,9,16.5),
attempts <- c(1,3,2),
qualify <- c("yes","no","yes")
)
print("original dataframe")
print(exam_data)
print("Extracting specific columns")
result <- data.frame(exam_data$name,exam_data$score)
exam_data <- data.frame(
name <- c("a","b","c"),
score <- c(12.5,9,16.5),
attempts <- c(1,3,2),
qualify <- c("yes","no","yes")
)
print("original dataframe")
print(exam_data)
print("Extracting specific columns")
result <- data.frame(exam_data$name,exam_data$score)
print(result)
exam_data <- data.frame(
name <- c("a","b","c"),
score <- c(12.5,9,16.5),
attempts <- c(1,3,2),
qualify <- c("yes","no","yes")
)
print("original dataframe")
print(exam_data)
print("Extracting specific columns")
result <- data.frame(exam_data$name,exam_data$score)
print(result)
result <- exam_data[1:2,]
print(result)
exam_data <- data.frame(
name <- c("a","b","c"),
score <- c(12.5,9,16.5),
attempts <- c(1,3,2),
qualify <- c("yes","no","yes")
)
print("original dataframe")
print(exam_data)
print("Extracting specific columns")
result <- data.frame(exam_data$name,exam_data$score)
print(result)
result <- exam_data[1:2,]
print(result)
exam_data <- data.frame(
name = c("a","b","c"),
score = c(12.5,9,16.5),
attempts = c(1,3,2),
qualify = c("yes","no","yes")
)
print("original dataframe")
print(exam_data)
print("Extracting specific columns")
result <- data.frame(exam_data$name,exam_data$score)
print(result)
result <- exam_data[1:2,]
print(result)
exam_data$country <- c("Ind","Aus","Pak")
print(exam_data)
print("adding new row")
newrow <- data.frame(
name=c('d'),
score=c(10.5),
attempts=c(1),
qualify=c('yes')
)
exam_data <- rbind(exam_data,newrow)
print(exam_data)
print("adding new row")
newrow <- data.frame(
name=c('d'),
score=c(10.5),
attempts=c(1),
qualify=c('yes')
country=c('NZ')
)
exam_data <- rbind(exam_data,newrow)
print(exam_data)
print("adding new row")
newrow <- data.frame(
name=c('d'),
score=c(10.5),
attempts=c(1),
qualify=c('yes')
country=c('NZ')
)
exam_data <- rbind(exam_data,newrow)
print(exam_data)
exam_data
newrow
print("adding new row")
newrow <- data.frame(
name=c('d'),
score=c(10.5),
attempts=c(1),
qualify=c('yes'),
country=c('NZ')
)
exam_data <- rbind(exam_data,newrow)
print(exam_data)
result1 <- merge(df1,df2,by="numid",all.x=TRUE)
df1 <- data.frame(numid=c(12,14,10.11))
df2 <- data.frame(numid=c(13,15,11,12))
print("Left outer join")
result1 <- merge(df1,df2,by="numid",all.x=TRUE)
print(result1)
print("Right outer join")
result2 <- merge(df1,df2,by="numid",all.x=TRUE)
print(result2)
print("outer join")
result3 <- merge(df1,df2,by="numid",all=TRUE)
print(result3)
print("Cross join")
result4 <- merge(df1,df2,by=NULL)
print(result4)
df1 <- data.frame(numid=c(12,14,10.11))
df2 <- data.frame(numid=c(13,15,11,12))
print("Left outer join")
result1 <- merge(df1,df2,by="numid",all.x=TRUE)
print(result1)
print("Right outer join")
result2 <- merge(df1,df2,by="numid",all.y=TRUE)
print(result2)
print("outer join")
result3 <- merge(df1,df2,by="numid",all=TRUE)
print(result3)
print("Cross join")
result4 <- merge(df1,df2,by=NULL)
print(result4)
help("array")
help("min")
newarr <- array(1:20,dim = length(newarr))
print(max(newarr))
print(min(newarr))
newarr <- array(1:20,dim = length(newarr))
newarray <- array(1:20,dim = length(data))
print(max(newarray))
print(min(newarray))
newarray <- array(1:20,dim = length(data))
print(max(newarray))
print(min(newarray))
newarray <- array(1:20,dim = length(data))
print(max(newarray))
print(min(newarray))
array()
newarray
newarray <- array(data=1:20,dim = length(data))
print(max(newarray))
print(min(newarray))
newarray <- array(data=1:25,dim = length(data))
print(max(newarray))
print(min(newarray))
newarray <- array(data=1:25)
print(max(newarray))
print(min(newarray))
newarray <- array(data=1:20)
print(max(newarray))
print(min(newarray))
getwd()
data <- read.csv("Sample.csv")
data
is.data.frame(data)
nrow(data)
ncol(data)
data$salary
max(data$salary)
min(data$salary)
subset(data,salary==max(salary))
subset(data,salary==min(salary))
subset(data,dept=="IT)
""
"
subset(data,dept=="IT")
subset(data,salary>30 & dept=="IT")
subset(data,salary<30 & dept=="IT")
subset(data,dept="operation" | dept=="IT")
subset(data,dept="operation" || dept=="IT")
subset(data,dept="operation" || "IT")
subset(data,dept=="operation" || dept=="IT")
subset(data,dept=="operation" | dept=="IT")
subset(data,dept=="Operation" | dept=="IT")
subset(data,data$start.date>2015)
subset(data,year(data$start.date)>2015)
year
help("date")
help(year)
??year
??extract year
??extractyear
year(data$start.date)
??POSIXlt
summary(data)
table(data)
typeof(data$start.date)
date1=as.Date(data$start.date)
typeof(date1)
date1=as.Date(data$start.date,format="%m/%d/%y")
typeof(date1)
date1=as.Date(data$start.date,format="%m/%d/%Y")
date1
format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>2010)
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>2014)
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>2014)
??csv
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>2014)
??`POSIXlt-class`
??POSIXlt
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>2014)
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>=2014)
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>=2014 & dept=="IT")
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>2014)
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>=2014)
subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>=2014 & dept=="IT")
savehistory("C:/Users/Sriram/Desktop/History.Rhistory")
write1 <- subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>=2014 & dept=="IT")
wrire.csv(write1,"Sampleoutput.csv")
write.csv(write1,"Sampleoutput.csv")
write1 <- subset(data,format(as.Date(data$start.date,format="%m/%d/%Y"),"%Y")>=2014 & dept=="IT")
data1 <- read.csv("Sampleinput.csv")
data1
subset(data1,year==3)
subset(data1,dept=="csv")
subset(data1,dept=="cse")
subset(data1,dept=="CSE")
subset(data1,dept=="MECH"&year=2)
subset(data1,dept=="MECH"&year==2)
subset(data1,dept=="CSE")
subset(data1,dept=="MECH"&year==2)
subset(data1,year==3)
subset(data1,location=="Delhi")
subset(data1,location=="Delhi"|location=="Punjab")
help("subset")
subset(data1,location=="Delhi"|location=="Punjab",select=c(data1$ï..name,data1$regno))
subset(data1,location=="Delhi"|location=="Punjab",select=c(ï..name,regno))
subset(data1,year==3,select=c(name))
subset(data1,year==3,select=c(is.name()))
subset(data1,year==3,select=c(ï..name))
data
data1
data1 <- read.csv("Sampleinput.csv")
data1
subset(data1,year==3,select=c(name))
install.packages("data.table")
library(data.table)
packageVersion(data.table)
packageVersion("data.table")
library(data.table)
packageVersion("data.table")
list_1 <- c("a","b","c","d")
list_2 <- c("1","2","3","4")
list_3 <- c("aa","bb","cc","dd")
DT <- data.table(v1=list_1,v2=list_2,v3=list_3)
DT
help("data.table")
instal.packages("curl")
install.packages("curl")
library(curl)
packageVersion("curl")
DT <- fread('https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv')
DT <- fread('https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv')
DT
DT
DT <- fread('https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv',nrow=50)
DT
DT <- fread('https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv',select = c(crim,medv))
DT <- fread('https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv',select = c('crim','medv'))
dt
DT
DT
summary(DT)
help(fread)
DT <- fread('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')
DT
DT[Price == max(Price,na.rm=TRUE)][,list(Manufacturer,Model,Type)]
setnames(DT,old='Model',new="New_Model")
DT[1:10,]
help("data.frame")
help("data.table")
anyNA(DT)
is.na(DT)
DT[is.na(DT)] <- 0
DT
DT[1:10,]
help("order")
DT <- fread('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')
DT <- DT[order(weight)]
DT <- DT[order(Weight)]
DT
DT[1:10]
DT[,-weight]
DT[,-Weight]
DT[,+Weight]
DT[,*Weight]
help("data.table")
DT2 <- fread('https://raw.githubusercontent.com/selva86/datasets/master/Cars93_miss.csv')
cars <- -D2[,Price]
cars <- -DT2[,Price]
DT[,Price] <- cars
DT[,-Price] <- cars
cars <- D2[,Price]
cars <- DT2[,Price]
DT[,-Price] <- cars
DT[,-Weight] <- cars
DT[,Weight] <- cars
DT[,Weight] <- DT[,Weight]+1
DT[,Weight] <- DT[,Weight+1]
DT[,Weight+1]
cars <- DT[,Weight+1]
cars
summary(cars)
desc(cars)
typeof(cars)
typeof(DT[,weight])
typeof(DT[,Weight])
class(DT[,Weight])
class(cars)
class(DT)
typeof(-DT[,Weight])
-DT[,Weight]
DTT <- data.frame(c(10,20,30,40))
DTT
DTT <- data.frame(c(10,20,30,40),c(v1))
DTT <- data.frame(v1=c(10,20,30,40)
)
DTT
DTT2 <- data.frame(v2=c(40,50,60,70))
DTT3 <- DTT
DTT <- DTT2
DTT
DTT[,v2] <- DTT3
DTT[,v2] <- DTT3[,v1]
DTT[,v2] <- DTT3[,v1]
DTT3
DTT <- data.frame(v1=c(10,20,30,40),v2=c(40,50,60,70))
DTT
DTT[,v2]
DTT[,'v2']
DTT[,'v2'] <- DTT3[,'v1']
DT[,'Weight'] <- DT[,'Weight']+1
DT
DT[,'Weight']
savehistory("C:/Users/Sriram/Desktop/gndmara.txt")
installed.packages("babynames")
babynames
library("babynames")
install.packages("babynames")
library("babynames")
str(babynames)
install.packages("sqldf")
library(sqldf)
sqldf("select count(*) from babynames")
sqldf("select * from babynames limit 10")
sqldf("select year,sex,name from babynames limit 10")
sqldf("select year,sex as 'Gender' from babynames limit 10")
help("sqldf")
help("limit")
sqldf("select year,sex as 'Gender' from babynames where sex=='M' limit 10)
;
""
''
'
"
sqldf("select year,sex as 'Gender' from babynames where sex=='M' limit 10")
sqldf("select year,sex as 'Gender',name from babynames where sex=='M' limit 10")
sqldf("select year,sex as 'Gender',name,prop from babynames where prop>0.05 limit 10")
summary(babynames)
help("describe")
help("desc")
sqldf("select * from babynames where sex!='F'")
sqldf("select * from babynames where sex!='F' limit 10")
sqldf(
"select year,name,4*prop as 'Final_Prop' from babynames where prop>0.40 limit 10"
)
sqldf(
"select year,name,4*prop as 'Final_Prop' from babynames where prop<0.40 limit 10"
)
sqldf("select * from babynames limit 10")
sqldf("select * from babynames order by year desc limit 10")
sqldf(
"select * from babynames order by year desc,n desc limit 20"
)
sqldf("select * from babynames order by name limit 10")
sqldf("select * from babynames order by name desc limit 10")
sqldf("select * from babynames where name like 'Ben%' limit 20")
sqldf("select * from babynames where name like '%man' limit 20")
sqldf("select * from babynames where name like '%man%' limit 20")
sqldf("select * from babynames where name in ('Coleman','Benjamin','Bennie') limit 10")
sqldf("select * from babynames where year >= 1980 and prop <0.5 limit 10")
sqldf("select * from babynames where year >= 1980 and prop <0.5 desc limit 10")
sqldf("select * from babynames where year >= 1980 and prop <0.5 order by prom desc limit 10")
sqldf("select * from babynames where year >= 1980 and prop <0.5 order by prop desc limit 10")
sqldf("selct * from babynames where name!='%man%' or year >2000")
sqldf("select * from babynames where name!='%man%' or year >2000")
sqldf("select * from babynames where name!='%man%' or year >2000 limit 10")
sqldf("select * from babynames where name!='%man%' or year not between 2000 and 2014 limit 10")
sqldf("select * from babynames where name!='%man%' or year not between 2000 and 2014 and sex!='F' limit 10")
sqldf("select * from babynames where (name!='%man%' or year not between 2000 and 2014) and sex!='F' limit 10")
sqldf("select * from babynames where prop>0.07 and year not between 2000 and 2014 limit 10")
sqldf("select * from babynames where n > 10000 order by name desc limit 10")
install.packages("dplyr")
library(dplyr)
savehistory("C:/Users/Sriram/Desktop/Rhistory file.txt")
savehistory("C:/Users/Sriram/Desktop/RhistoryCSV.csv")
